From 0b79d92001450e7f359212d4273100628f6a1693 Mon Sep 17 00:00:00 2001
From: Eric Koegel <eric.koegel@gmail.com>
Date: Sun, 5 Oct 2014 16:50:25 +0300
Subject: [PATCH] Set source id to 0 after calling g_source_remove

Avoids some GLIB-Critical runtime messages by properly resetting the
source id variables after removing the source.
Patch provided by Manfred Hampl.
---
 src/ck-job.c              | 2 ++
 src/ck-run-programs.c     | 1 +
 src/ck-tty-idle-monitor.c | 1 +
 src/ck-vt-monitor.c       | 1 +
 4 files changed, 5 insertions(+)

diff --git a/src/ck-job.c b/src/ck-job.c
index 87fe33a..a69eea9 100644
--- a/src/ck-job.c
+++ b/src/ck-job.c
@@ -369,9 +369,11 @@ ck_job_finalize (GObject *object)
 
         if (job->priv->out_watch_id > 0) {
                 g_source_remove (job->priv->out_watch_id);
+                job->priv->out_watch_id = 0;
         }
         if (job->priv->err_watch_id > 0) {
                 g_source_remove (job->priv->err_watch_id);
+                job->priv->err_watch_id = 0;
         }
         g_free (job->priv->command);
         g_string_free (job->priv->std_out, TRUE);
diff --git a/src/ck-run-programs.c b/src/ck-run-programs.c
index 933fd93..8f14388 100644
--- a/src/ck-run-programs.c
+++ b/src/ck-run-programs.c
@@ -94,6 +94,7 @@ _child_watch (GPid       pid,
 
         g_spawn_close_pid (pid);
         g_source_remove (cd->timeout_id);
+        cd->timeout_id = 0;
 
         cd->child_is_running = FALSE;
 
diff --git a/src/ck-tty-idle-monitor.c b/src/ck-tty-idle-monitor.c
index 4e9ecdc..2aba92a 100644
--- a/src/ck-tty-idle-monitor.c
+++ b/src/ck-tty-idle-monitor.c
@@ -171,6 +171,7 @@ remove_idle_hint_timeout (CkTtyIdleMonitor *tty_idle_monitor)
 {
         if (tty_idle_monitor->priv->timeout_id > 0) {
                 g_source_remove (tty_idle_monitor->priv->timeout_id);
+                tty_idle_monitor->priv->timeout_id = 0;
         }
 }
 
diff --git a/src/ck-vt-monitor.c b/src/ck-vt-monitor.c
index b5d6d8d..b0541cd 100644
--- a/src/ck-vt-monitor.c
+++ b/src/ck-vt-monitor.c
@@ -504,6 +504,7 @@ ck_vt_monitor_finalize (GObject *object)
 
         if (vt_monitor->priv->process_queue_id > 0) {
                 g_source_remove (vt_monitor->priv->process_queue_id);
+                vt_monitor->priv->process_queue_id = 0;
         }
 
         if (vt_monitor->priv->event_queue != NULL) {


From efc043c0ea6b7d7ee0df215038eb1b585b14db5c Mon Sep 17 00:00:00 2001
From: Eric Koegel <eric.koegel@gmail.com>
Date: Tue, 9 Dec 2014 19:44:15 +0300
Subject: [PATCH] Fix for GLib-CRITICAL: Source ID was not found

On remote ck session, there was a warning generated during log out.
This patch should fix that warning as well as add a couple debug
lines to help future troubleshooting.
---
 src/ck-tty-idle-monitor.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/src/ck-tty-idle-monitor.c b/src/ck-tty-idle-monitor.c
index 2aba92a..2b41917 100644
--- a/src/ck-tty-idle-monitor.c
+++ b/src/ck-tty-idle-monitor.c
@@ -169,6 +169,7 @@ ck_tty_idle_monitor_get_property (GObject    *object,
 static void
 remove_idle_hint_timeout (CkTtyIdleMonitor *tty_idle_monitor)
 {
+        g_debug ("remove_idle_hint_timeout: checking timeout_id %d", tty_idle_monitor->priv->timeout_id);
         if (tty_idle_monitor->priv->timeout_id > 0) {
                 g_source_remove (tty_idle_monitor->priv->timeout_id);
                 tty_idle_monitor->priv->timeout_id = 0;
@@ -225,6 +226,9 @@ check_tty_idle (CkTtyIdleMonitor *monitor)
         time_t      idletime;
         time_t      last_access;
 
+        g_debug ("check_tty_idle: setting timeout_id %d to 0", monitor->priv->timeout_id);
+        monitor->priv->timeout_id = 0;
+
         if (monitor->priv->device == NULL) {
                 return FALSE;
         }
@@ -246,8 +250,6 @@ check_tty_idle (CkTtyIdleMonitor *monitor)
 
         tty_idle_monitor_set_idle_hint_internal (monitor, is_idle);
 
-        monitor->priv->timeout_id = 0;
-
         if (is_idle) {
                 if (! monitor_add_watch (monitor)) {
                         /* if we can't add a watch just add a new timer */
@@ -275,6 +277,7 @@ static void
 schedule_tty_check (CkTtyIdleMonitor *monitor,
                     guint             seconds)
 {
+        g_debug ("schedule_tty_check: timeout_id %d", monitor->priv->timeout_id);
         if (monitor->priv->timeout_id == 0) {
 #if GLIB_CHECK_VERSION(2,14,0)
                 monitor->priv->timeout_id = g_timeout_add_seconds (seconds,
@@ -285,6 +288,7 @@ schedule_tty_check (CkTtyIdleMonitor *monitor,
                                                            (GSourceFunc)check_tty_idle,
                                                            monitor);
 #endif
+                g_debug ("schedule_tty_check: timeout_id %d", monitor->priv->timeout_id);
         }
 }
 
